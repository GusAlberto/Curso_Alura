

/* ARRASTE PARA BAIXO üëá 

Criando classe com suas atribui√ß√µes e funcionalidades
~~~~~Explanation topics~~~~~
1- Nomes de classes como se fossem *substantivo* e nome de m√©todos como se fossem *verbos*;
------------------------------------------------------------------------------------------------------------------------
2- Pseudo-vari√°vel¬†$THIS¬†passa a refer√™ncia(passar o conte√∫do completo) para o objeto que chamou o m√©todo atual;
------------------------------------------------------------------------------------------------------------------------
3- Early Return: √© colocar na fun√ß√£o um return para finalizar logo ap√≥s ter algum erro;
------------------------------------------------------------------------------------------------------------------------
4- √â uma boa pr√°tica/recomenda√ß√£o geral deixar todos os Atributos privados e somente os M√©todos p√∫blicos;
4.1- MAS nem todo m√©todo deve ser p√∫blico;
------------------------------------------------------------------------------------------------------------------------
5- Devemos criar m√©todos de acesso Getters(get) e Setters(set) para poder acessar as propriedades privados;
------------------------------------------------------------------------------------------------------------------------
6- O m√©todo m√°gico construtor(__construc) serve para obrigar a informar os atributos da classe para criar o objeto;
6.1- Devemos criar a inst√¢ncia apenas de forma que ela seja v√°lida, ou seja, n√£o add muitas regras! ;
6.2- Nota: Todos os m√©todos m√°gicos DEVEM ser declarados como public (Documenta√ß√£o PHP);
------------------------------------------------------------------------------------------------------------------------
7- Self √© nome da fun√ß√£o quando iremos mencionar nossa Classe no m√©todo __construct;
------------------------------------------------------------------------------------------------------------------------
8- M√©todo m√°gico __destruct √© utilizado para apagar as inst√¢ncias(objetos);
8.1- S√£o destruidos objetos que n√£o tem nenhuma refer√™ncia, que nada est√° apontando para ele;
------------------------------------------------------------------------------------------------------------------------
9- Quando atribu√≠mos static √† uma fun√ß√£o, significa que o atributo passa a existir junto com a pr√≥pria classe;
9.1- Ou seja, as fun√ß√µes est√°ticas s√£o associadas √† classe, n√£o a uma inst√¢ncia da classe;
9.2- Pode ser acessada sem a cria√ß√£o de um objeto;
------------------------------------------------------------------------------------------------------------------------
10- Composi√ß√£o de objetos √© quando desmembramos uma classe(Conta) em diversos outras classes(Titular) e objetos; 
------------------------------------------------------------------------------------------------------------------------
11- Classe abstrata n√£o pode ser instanciada;
11.1- S√≥ podemos criar objetos feitos √† partir das classes que extendem a classe abstrata pai;
11.2- Tendo um m√©todo abstrato, obriga que todas as classes filhas implementem aquele m√©todo;
11.3- N√£o impede que novos m√©todos sejam criados nas classes filhas.
------------------------------------------------------------------------------------------------------------------------

*/